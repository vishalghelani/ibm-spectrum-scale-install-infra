---
# Dir package installation method

- block:  ## run_once: true
    - name: upgrade | Stat directory installation package
      stat:
        path: "{{ scale_install_directory_pkg_path }}"
      register: scale_install_dirpkg

    - name: upgrade | Check directory installation package
      assert:
        that: scale_install_dirpkg.stat.exists
        msg: >-
          Please set the variable 'scale_install_directory_pkg_path' to point to the
          local installation package (accessible on Ansible control machine)!
  run_once: true
  delegate_to: localhost

- name: install| Creates default directory
  file:
    path: "{{ scale_extracted_path }}"
    state: directory
    mode: a+x
    recurse: yes

- name: upgrade | Stat extracted packages
  stat:
    path: "{{ scale_extracted_path + '/' + scale_install_directory_pkg_path | basename }}"
  register: scale_install_gpfs_packagedir

#
# Copy installation directory package to default
#
- block:
    - name: upgrade | Copy installation package to node
      copy:
        src: "{{ scale_install_directory_pkg_path }}"
        dest: "{{ scale_extracted_path }}"
        mode: a+x

- name: upgrade | Extract installation package
  set_fact:
    dir_path: "{{ scale_extracted_path + '/' + scale_install_directory_pkg_path | basename }}"

- name: upgrade | gpfs base path
  set_fact:
    gpfs_path_url: "{{ dir_path }}"
  when: scale_install_directory_pkg_path is defined

#
# Find file audit logging package
#
- block:
    #
    # Find GPFS librdkafka
    #
    - name: upgrade | Find gpfs.librdkafka (gpfs.librdkafka) package
      find:
        paths: "{{ gpfs_path_url }}"
        patterns: gpfs.librdkafka*.rpm
      register: scale_install_gpfs_fal

    - name: upgrade | Check valid GPFS (gpfs.librdkafka) package
      assert:
        that: scale_install_gpfs_fal.matched > 0
        msg: >-
          No GPFS auditlogin librakafka(gpfs.librdkafka) package found
          {{ gpfs_path_url }}gpfs.librdkafka*.rpm

    - name: upgrade | Add GPFS file audit logging packages to list
      vars:
        current_package: "{{ gpfs_path_url }}/{{ item }}"
      set_fact:
        scale_install_all_packages: "{{ scale_install_all_packages + [ current_package ] }}"
      with_items:
        - "{{ scale_install_gpfs_fal.files.0.path | basename }}"

  when: (scale_fileauditlogging_enable | bool)
